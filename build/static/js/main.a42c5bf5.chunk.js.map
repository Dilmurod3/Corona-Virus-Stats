{"version":3,"sources":["repositories/covidRepository.js","App.jsx","reportWebVitals.js","index.js"],"names":["getCaseByCountry","a","country","url","fetch","response","json","App","useState","setCountry","cases","setCases","handleGetCasesByCountry","covidRepository","className","type","name","id","onChange","input","target","value","placeholder","onClick","data","rows","map","c","total_cases","total_recovered","total_deaths","src","flag","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAQeA,EARO,uCAAG,iCAAAC,EAAA,6DAASC,EAAT,EAASA,QAC1BC,EADiB,wFACsED,GADtE,SAGAE,MAAMD,GAHN,cAGjBE,EAHiB,yBAKhBA,EAASC,QALO,2CAAH,sD,MCkEPC,MA9Df,WAAgB,IAAD,EACiBC,qBADjB,mBACNN,EADM,KACGO,EADH,OAEaD,oBAAS,GAFtB,mBAENE,EAFM,KAECC,EAFD,KAQPC,EAAuB,uCAAG,4BAAAX,EAAA,sEACVY,EAAgB,CAAEX,YADR,OACxBQ,EADwB,OAG9BC,EAASD,GAHqB,2CAAH,qDAM7B,OACE,qBAAKI,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qDACA,8CACA,uBACEC,KAAK,SACLC,KAAK,GACLC,GAAG,GACHC,SApBe,SAACC,GACxBV,EAAWU,EAAMC,OAAOC,QAoBhBC,YAAY,YAEd,wBAAQC,QAASX,EAAjB,uBAEF,qBAAKE,UAAU,cAAf,SACGJ,EACCA,EAAMc,KAAKC,KAAKC,KAAI,SAACC,GAAD,OAClB,mCACE,sBAAKb,UAAU,YAAf,UACE,sBAAKA,UAAU,QAAf,UACE,+BACE,yCADF,IACmBa,EAAEzB,WAErB,+BACE,6CADF,IACuByB,EAAEC,eAEzB,+BACE,4CADF,IACsBD,EAAEE,mBAExB,+BACE,yCADF,IACmBF,EAAEG,mBAGvB,qBAAKhB,UAAU,QAAf,SACE,qBAAKiB,IAAKJ,EAAEK,KAAMC,IAAI,eAM9B,6DC/CGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a42c5bf5.chunk.js","sourcesContent":["const getCaseByCountry = async ({ country }) => {\r\n  const url = `https://corona-virus-stats.herokuapp.com/api/v1/cases/countries-search?search=${country}`;\r\n\r\n  const response = await fetch(url);\r\n\r\n  return response.json();\r\n};\r\n\r\nexport default getCaseByCountry;\r\n","import React, { useState } from \"react\";\r\nimport covidRepository from \"./repositories/covidRepository\";\r\nimport \"./App.css\";\r\n//\r\nfunction App() {\r\n  const [country, setCountry] = useState();\r\n  const [cases, setCases] = useState(false);\r\n\r\n  const handleSetCountry = (input) => {\r\n    setCountry(input.target.value);\r\n  };\r\n\r\n  const handleGetCasesByCountry = async () => {\r\n    const cases = await covidRepository({ country });\r\n\r\n    setCases(cases);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Main\">\r\n        <div className=\"Tittle-Search\">\r\n          <h1>Covid-19 statistics</h1>\r\n          <h1>in the world</h1>\r\n          <input\r\n            type=\"search\"\r\n            name=\"\"\r\n            id=\"\"\r\n            onChange={handleSetCountry}\r\n            placeholder=\"Country\"\r\n          />\r\n          <button onClick={handleGetCasesByCountry}>Search</button>\r\n        </div>\r\n        <div className=\"Cases-Image\">\r\n          {cases ? (\r\n            cases.data.rows.map((c) => (\r\n              <>\r\n                <div className=\"Info-Flag\">\r\n                  <div className=\"Cases\">\r\n                    <h2>\r\n                      <b>Country:</b> {c.country}\r\n                    </h2>\r\n                    <h3>\r\n                      <b>Total cases:</b> {c.total_cases}\r\n                    </h3>\r\n                    <h3>\r\n                      <b>Recovered: </b> {c.total_recovered}\r\n                    </h3>\r\n                    <h3>\r\n                      <b>Deaths: </b> {c.total_deaths}\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"Image\">\r\n                    <img src={c.flag} alt=\"\" />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ))\r\n          ) : (\r\n            <p>No Cases to display!</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}